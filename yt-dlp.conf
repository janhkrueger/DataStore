# Lines starting with # are comments

# Please adjust to your needs.

# Number of seconds to sleep between requests during data extraction
--sleep-requests 5 

# Number of seconds to sleep before each download.
--min-sleep-interval 5 

# Maximum number of seconds to sleep.
--max-sleep-interval 15 

# Ignore download and postprocessing errors.
-i 

# Video format code
-f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4' 

# Do not mark videos watched (default)
--no-mark-watched 

# Write subtitle file
--write-subs

# Write automatically generated subtitle file
--write-auto-sub 

# Write video description to a .description file
--write-description 

# Write video metadata to a .info.json file
--write-info-json 

# Write playlist metadata in addition to the video metadata
--write-playlist-metafiles 

# Do not read/dump cookies from/to file
--no-cookies 

# Write thumbnail image to disk
--write-thumbnail 

# Do not retrieve video comments unless the extraction is known to be quick
--no-write-comments 

# Download only videos not listed in the archive file.
--download-archive archive.txt 

# Do not stop the download process when encountering a file that is in the archive
--no-break-on-existing 

# SponsorBlock categories to create chapters for, separated by commas.
--sponsorblock-mark ALL

# Download livestreams from the start
--live-from-start 

# Do not wait for scheduled streams (default)
--no-wait-for-video 

# Delete the intermediate video file after post-processing
--no-keep-video  

# Embed metadata to the video file.
--add-metadata 

# Parse additional metadata like title/artist from other fields
--parse-metadata 'upload_date:%(meta_date)s'

# Embed thumbnail in the video as cover art
--embed-thumbnail

# Add chapter markers to the video file
--embed-chapters

# Convert the thumbnails to another format
--convert-thumbnails jpg

# Append given template to the file.
--print-to-file "%(.{channel,channel_id,channel_id,uploader,title,fulltitle,upload_date,timestamp,release_year,release_date,release_timestamp,duration_string,is_live,was_live,original_url,description,categories,tags,license})#j" "~/Movies/youtube/%(channel)s/%(upload_date)s %(title)s.json"

# Output filename template
-o "~/Movies/youtube/%(channel)s/%(upload_date)s %(title)s.%(ext)s"

# File containing URLs to download
--batch-file yt-urls.txt